{"version":3,"sources":["components/FormComponent.js","components/CounterComponent.js","components/CounterListComponent.js","App.js","index.js"],"names":["FormComponent","this","props","counterToUpdate","onSubmit","onFormUpdate","className","type","key","counterId","defaultValue","name","id","counterName","placeholder","counterValue","onFormSubmit","React","Component","CounterComponent","index","counter","onClick","handleCounterUpdate","size","icon","faEdit","handleDelete","faTrashAlt","handleCounterIncrease","faPlusSquare","handleCounterDecrease","faMinusSquare","CounterListComponent","counters","map","App","state","handleSubmit","bind","handleUpdate","event","uuid","counterInputValues","getInputValues","slice","newCounter","value","parseInt","setState","concat","preventDefault","target","elements","counterUpdated","filteredCounters","filter","counterDecreased","counterIncreased","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.07ea6e94.chunk.js","sourcesContent":["import React from 'react';\n\nclass FormComponent extends React.Component {\n    render() {\n        if (this.props.counterToUpdate !== false) {\n            return (\n                <div>\n                    <form onSubmit={this.props.onFormUpdate}>\n                        <div className=\"row flex-row\">\n                            <h4 className=\"text-left\">iCount</h4>\n                            <div className=\"four columns d-block\">\n                                <input type=\"hidden\"\n                                       key={`counterIdToUpdate:${this.props.counterToUpdate.counterId}`}\n                                       defaultValue={this.props.counterToUpdate.counterId} name=\"counterId\"/>\n                                <input\n                                    id=\"counterName\"\n                                    name=\"counterName\"\n                                    defaultValue={this.props.counterToUpdate.counterName}\n                                    key={`counterId:${this.props.counterToUpdate.counterId}`}\n                                    placeholder=\"Counter name\"\n                                    type=\"text\"\n                                />\n                                <input\n                                    id=\"counterValue\"\n                                    name=\"counterValue\"\n                                    defaultValue={this.props.counterToUpdate.counterValue}\n                                    key={`counterValue:${this.props.counterToUpdate.counterId}`}\n                                    placeholder=\"Initial Count\"\n                                    type=\"number\"\n                                />\n                            </div>\n                            <div className=\"four columns\">\n\n                                <button id=\"submit\" className=\"button-primary update-button\">Update counter</button>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            )\n        } else {\n            return (\n                <div>\n                    <form onSubmit={this.props.onFormSubmit}>\n                        <div className=\"row flex-row\">\n                            <h4 className=\"text-left\">iCount</h4>\n                            <div className=\"four columns d-block\">\n                                <input\n                                    id=\"counterName\"\n                                    name=\"counterName\"\n                                    placeholder=\"Counter name\"\n                                    type=\"text\"\n                                />\n                            </div>\n                            <div className=\"four columns d-block\">\n                                <input\n                                    id=\"counterValue\"\n                                    name=\"counterValue\"\n                                    placeholder=\"Initial Count\"\n                                    type=\"number\"\n                                />\n                            </div>\n                            <div className=\"four columns\">\n                                <button id=\"submit\" className=\"button-primary submit-button\">Create counter</button>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            );\n        }\n    }\n\n    //\n    // validateCounterName(event) {\n    //     // Validate field\n    //     return event.target.value;\n    // }\n    //\n    // validateCounterValue(event) {\n    //     // Validate field\n    //     return event.target.value;\n    // }\n}\n\nexport default FormComponent;","import React from 'react';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {faEdit, faMinusSquare, faPlusSquare, faTrashAlt} from '@fortawesome/free-solid-svg-icons'\n\n\nexport default function CounterComponent(props) {\n    return (\n        <tr>\n            <td>\n                {props.index}\n            </td>\n            <td>{props.counter.counterName}</td>\n            <td>\n                {props.counter.counterValue}\n            </td>\n            <td>\n                <button className={\"m-3 action-holder edit\"}\n                        onClick={() => props.handleCounterUpdate(props.counter.counterId)}>\n                    <FontAwesomeIcon\n                        size={\"3x\"}\n                        icon={faEdit}/>\n                </button>\n                <button className={\"m-3 action-holder delete\"}\n                        onClick={() => props.handleDelete(props.counter.counterId)}>\n                    <FontAwesomeIcon\n                        icon={faTrashAlt}\n                        size={\"3x\"}/>\n                </button>\n                <button className={\"m-3 action-holder increase text-center\"}\n                        onClick={() => props.handleCounterIncrease(props.counter.counterId)}>\n                    <FontAwesomeIcon\n                        icon={faPlusSquare}\n                        size={\"3x\"}\n                    />\n                </button>\n                <button className={\"m-3 action-holder decrease\"}\n                        onClick={() => props.handleCounterDecrease(props.counter.counterId)}>\n                    <FontAwesomeIcon\n                        icon={faMinusSquare}\n                        size={\"3x\"}\n                    />\n                </button>\n            </td>\n        </tr>\n    );\n}\n\n","import React from 'react';\nimport CounterComponent from './CounterComponent';\n\nexport default class CounterListComponent extends React.Component {\n    render() {\n        return (\n                <table className=\"u-full-width\">\n                    <thead>\n                    <tr>\n                        <th>#</th>\n                        <th>Name:</th>\n                        <th>Value:</th>\n                        <th>Action:</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                        {this.props.counters.map(\n                            (counter, index) => <CounterComponent\n                                key={counter.counterId}\n                                index={index}\n                                counter={counter}\n                                handleDelete={this.props.handleDelete}\n                                handleCounterIncrease={this.props.handleCounterIncrease}\n                                handleCounterDecrease={this.props.handleCounterDecrease}\n                                handleCounterUpdate={this.props.handleCounterUpdate}/>)}\n                    </tbody>\n                </table>\n        );\n    }\n}\n\n","import React from 'react';\nimport uuid from 'uuid';\nimport FormComponent from './components/FormComponent';\nimport CounterListComponent from './components/CounterListComponent';\nimport './App.css';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            counterToUpdate: false,\n            counters: []\n        };\n        /**\n         * https://mzl.la/2SzTQtA - MDN link to bind\n         * Bind methods and only in the lowest level of component tree\n         * send the params you need. But wrap it in arrow function, or it will\n         * trigger the method every time component re-renders!\n         */\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleDelete = this.handleDelete.bind(this);\n        this.handleCounterDecrease = this.handleCounterDecrease.bind(this);\n        this.handleCounterIncrease = this.handleCounterIncrease.bind(this);\n        this.handleCounterUpdate = this.handleCounterUpdate.bind(this);\n        this.handleUpdate = this.handleUpdate.bind(this);\n    }\n\n    handleSubmit(event) {\n        const counterId = uuid();\n        const counterInputValues = this.getInputValues(event);\n        const counters = this.state.counters.slice();\n\n        const newCounter = {\n            counterId,\n            counterName: counterInputValues.counterName.value === ''\n                ? 'No name counter'\n                : counterInputValues.counterName.value,\n            counterValue: parseInt(\n                counterInputValues.counterValue.value === '' ? 0 : counterInputValues.counterValue.value),\n        };\n        this.setState(\n            {counters: counters.concat(newCounter)},\n        );\n        counterInputValues.counterName.value = '';\n        counterInputValues.counterValue.value = '';\n        event.preventDefault();\n    }\n\n    handleUpdate(event) {\n        const counterName = event.target.elements.counterName.value;\n        const counterValue = event.target.elements.counterValue.value;\n        const counterId = event.target.elements.counterId.value;\n\n        const counterUpdated = this.state.counters.map(counter => {\n            return counter.counterId === counterId\n                ? {\n                    counterId: counterId,\n                    counterName: counterName,\n                    counterValue: counterValue,\n                }\n                : counter;\n        });\n\n        this.setState({counterToUpdate: false, counters: counterUpdated});\n        event.preventDefault();\n    }\n\n    getInputValues(event) {\n        return {\n            counterName: event.target.elements.counterName,\n            counterValue: event.target.elements.counterValue\n        }\n    };\n\n    handleDelete(counterId) {\n        const filteredCounters = this.state.counters.filter(\n            counter => counter.counterId !== counterId,\n        );\n        this.setState({counters: filteredCounters});\n    }\n\n    handleCounterDecrease(counterId) {\n        const counterDecreased = this.state.counters.map(counter => {\n            return counter.counterId === counterId\n                ? {\n                    counterId: counter.counterId,\n                    counterName: counter.counterName,\n                    counterValue: --counter.counterValue,\n                }\n                : counter;\n        });\n        this.setState({counters: counterDecreased});\n    }\n\n    handleCounterIncrease(counterId) {\n        const counterIncreased = this.state.counters.map(counter => {\n            return counter.counterId === counterId\n                ? {\n                    counterId: counter.counterId,\n                    counterName: counter.counterName,\n                    counterValue: ++counter.counterValue,\n                }\n                : counter;\n        });\n        this.setState({counters: counterIncreased});\n    }\n\n    handleCounterUpdate(counterId) {\n        const counterToUpdate = this.state.counters.filter(counter => counter.counterId === counterId)[0];\n\n        this.setState((state) => {\n            return {\n                counterToUpdate,\n                counters: state.counters\n            }\n        });\n\n    }\n\n    render() {\n        return (\n            <div className=\"container u-full-width\">\n                <div className=\"row\">\n                    <div className=\"two columns form-column\">\n                        <FormComponent onFormSubmit={this.handleSubmit}\n                                       onFormUpdate={this.handleUpdate}\n                                       counterToUpdate={this.state.counterToUpdate}/>\n                    </div>\n                    <div className=\"ten columns table-column\">\n                        <CounterListComponent counters={this.state.counters}\n                                              handleDelete={this.handleDelete}\n                                              handleCounterIncrease={this.handleCounterIncrease}\n                                              handleCounterDecrease={this.handleCounterDecrease}\n                                              handleCounterUpdate={this.handleCounterUpdate}\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../node_modules/skeleton-css/css/normalize.css';\nimport '../node_modules/skeleton-css/css/skeleton.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}